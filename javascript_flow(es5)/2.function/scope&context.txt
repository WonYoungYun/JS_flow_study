함수스코프, 실행컨텍스트

스코프(scope) : 변수의 유효범위
    함수가 정의될떄 결정

실행컨텍스트(Execution Context) : 실행되는 코드덩어리
    함수가 실행될때 생성
    호이스팅, this바인딩 등의 정보가 담긴다.

var a = 1;
function outer() {
    console.log(a); //1

    function inner(){
        console.log(a); //undefined
        var a = 3; 
    }
    inner();
    console.log(a); //1
}
outer();
console.log(a); //1

1. 전역 실행컨텍스트 생성(global)
2. 변수 a 선언
3. 함수 outer 선언(global > outer) //호이스팅 끝
4. 변수 a에 1할당
5. outer 함수 호출 -> outer 실행컨텍스트 생성
    5-1. 함수 inner 선언(global > outer > inner)
    5-2. outer scope에서 a 탐색 -> global scope에서 a 탐색 -> 1출력
    5-3. inner 함수 호출 -> inner 실행컨텍스트 생성
        5-3-1. 변수 a 선언
        5-3-2. inner scope에서 a 탐색 -> undefined 출력
        5-3-3. 변수 a에 3할당
    5-4. inner 실행컨텍스트 종료
    5-5. outer scope에서 a탐색 -> global scope에서 a탐색 -> 1출력
6. outer 실행컨텍스트 종료
7. global scope에서 a 탐색 -> 1출력
8. 전역 실행컨텍스트 종료
